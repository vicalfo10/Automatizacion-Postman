{
	"info": {
		"_postman_id": "828b0c99-24c7-4085-9702-d499d51ff15b",
		"name": "ExampleAuto",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13084746"
	},
	"item": [
		{
			"name": "Terms Conditions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/{{stage}}/documents?type=TERMS_CONDITIONS&language={{languageValue}}&country={{countryValue}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{stage}}",
						"documents"
					],
					"query": [
						{
							"key": "type",
							"value": "TERMS_CONDITIONS"
						},
						{
							"key": "language",
							"value": "{{languageValue}}"
						},
						{
							"key": "country",
							"value": "{{countryValue}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Privacy Policy",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/{{stage}}/documents?type=PRIVACY_POLICY&language={{languageValue}}&country={{countryValue}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{stage}}",
						"documents"
					],
					"query": [
						{
							"key": "type",
							"value": "PRIVACY_POLICY"
						},
						{
							"key": "language",
							"value": "{{languageValue}}"
						},
						{
							"key": "country",
							"value": "{{countryValue}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    //pm.response.to.have.status(200)",
							"    pm.expect(pm.response.code).to.eql(200)",
							"",
							"    const response = JSON.parse(responseBody)",
							"",
							"    const dataResult = response.AuthenticationResult",
							"",
							"    const accessToken = dataResult.AccessToken",
							"    const dataIdToken = dataResult.IdToken",
							"    const dataType = dataResult.TokenType",
							"",
							"    pm.environment.set(\"accessTokenValue\", accessToken)",
							"    pm.environment.set(`token${ dataType }`, dataIdToken)",
							"",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-amz-json-1.1",
						"type": "text"
					},
					{
						"key": "X-Amz-Target",
						"value": "AWSCognitoIdentityProviderService.InitiateAuth",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"AuthFlow\": \"USER_PASSWORD_AUTH\",\n    \"AuthParameters\": {\n        \"PASSWORD\": \"{{passwordValue}}\",\n        \"USERNAME\": \"{{kashtagValue}}\"\n    },\n    \"ClientId\": \"{{cognitoClientId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{cognitoUrl}}",
					"host": [
						"{{cognitoUrl}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Create User\", function () {",
							"    pm.expect(pm.response.code).to.eql(200)",
							"",
							"    const response = JSON.parse(responseBody)",
							"",
							"    pm.collectionVariables.set(\"idKashtagValue\", response.id)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{he_authorized-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/{{stage}}/users/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"{{stage}}",
						"users",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{tokenBearer}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tokenBearer",
			"value": ""
		},
		{
			"key": "idKashtagValue",
			"value": ""
		}
	]
}